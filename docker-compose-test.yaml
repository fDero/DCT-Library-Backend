version: "3.3"

services:
  database_test:
    image: postgres:13
    environment:
      MAX_LOANS_PER_USER: 5
      TEST: "true"
      MOCK_DATA: "false"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "milleteschi"
      POSTGRES_DB: "testdb"
    ports:
      - "5432:5432"
    volumes:
      - ./postgres_test_volume:/var/lib/postgresql/data
      - ./database:/docker-entrypoint-initdb.d:ro
    command: ["postgres", "-p", "5432"]
    networks:
      - lso_test_network

  redis_test:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    networks:
      - lso_test_network

  backend_test:
    image: lso_backend:1
    command: sh -c "dockerize -wait tcp://database_test:5432 -wait tcp://redis_test:6379 -timeout 120s sh build_and_run.sh test"
    environment:
      SERVER: "LSO-Backend/1.0.0"
      CLIENT_CONNECTION_TIMEOUT: 60
      FSANITIZE_ENABLED: "true"
      JWT_ISS: "DCT"
      JWT_AUD: "User"
      JWT_RENEWAL:     0.5     # 50% of the total duration
      JWT_EXP_BULLET:  30      # 30 seconds
      JWT_EXP_BLITZ:   900     # 15 minutes
      JWT_EXP_SHORT:   3600    # 1 hour
      JWT_EXP_MEDIUM:  86400   # 1 day
      JWT_EXP_LONG:    604800  # 1 week
      JWT_EXP_DEFAULT: 3600    # 1 hour
      PRIVATE_KEY_FILE: "/auth_keys/private_key.pem"
      PUBLIC_KEY_FILE: "/auth_keys/public_key.pem"
      REDISHOST: "redis_test"
      REDISPORT: "6379"
      SERVER_PORT: "8080"
      SERVER_MAX_CONNECTION: 10000
      GTEST_COLOR: "yes"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "milleteschi"
      POSTGRES_DB: "testdb"
      POSTGRES_PORT: 5432
      POSTGRES_HOST: "database_test"
    volumes:
      - "./backend:/server"
    working_dir: "/server"
    depends_on:
      - database_test
      - redis_test
    networks:
      - lso_test_network

networks:
  lso_test_network:
    driver: bridge
