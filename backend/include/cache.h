
#include <hiredis/hiredis.h>
#include <stdbool.h>

typedef redisContext cache_conn_t;

extern pthread_key_t cache_connection_key;

void cache_connection_init();
cache_conn_t* open_cache_connection();
void close_cache_connection(cache_conn_t* connection);
void close_cache_connection_callback(void* connection);

char* get_value_by_key_from_cache(cache_conn_t* conn, const char* key);
bool insert_key_value_pair_into_cache(cache_conn_t* conn, const char* key, const char* val, unsigned long expiration_time);
char* generate_random_key(cache_conn_t* conn);
char* insert_value_with_autogenerated_unique_key(cache_conn_t* conn, const char* value, unsigned long expiration_time);